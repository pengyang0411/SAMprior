x <- rnorm(1000)  # no unit-root
adf.test(x)
x <- rnorm(1000)  # no unit-root
adf.test(x)
y <- diffinv(x)   # contains a unit-root
adf.test(y)
adf.test(data$CPIAUCSL)
## Load the data
load('Data/dat_all_month.RData')
plot(dat_all$BP)
plot(dat_all$BP[dat_all$Bank == '上海银行'])
x = dat_all$BP[dat_all$Bank == '上海银行']
adf.test(x)
adf.test(x, k = 1)
adf.test(x, k = 2)
adf.test(x, k = 3)
adf.test(x, k = 4)
adf.test(x, k = 5)
adf.test(x, k = 6)
## Stationary check
adf.test(data_org$CPIAUCSL, 1)
# Access a subset of the fred_qd dataset
data_org <- fred_qd[, c("CPIAUCSL", "UNRATE", "FEDFUNDS")]
# Transform it to be stationary
data <- fred_transform(data_org, codes = c(5, 5, 1), lag = 4)
par(mfrow = c(1,3))
plot(data_org$CPIAUCSL)
plot(data$CPIAUCSL)
plot(data_org$CPIAUCSL[-c(1:4)], data$CPIAUCSL)
data("fred_qd")
# Access a subset of the fred_qd dataset
data_org <- fred_qd[, c("CPIAUCSL", "UNRATE", "FEDFUNDS")]
# Transform it to be stationary
data <- fred_transform(data_org, codes = c(5, 5, 1), lag = 4)
par(mfrow = c(1,3))
plot(data_org$CPIAUCSL)
plot(data$CPIAUCSL)
plot(data_org$CPIAUCSL[-c(1:4)], data$CPIAUCSL)
par(mfrow = c(1,1))
## Stationary check
adf.test(data_org$CPIAUCSL, 1)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 1)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 2)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 3)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 4)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 5)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 6)
## Stationary check
adf.test(data_org$CPIAUCSL, k = 7)
x
plot(x)
y <- fred_transform(x, code = 5, lag = 4)
y <- fred_transform(data.frame(x = x), code = 5, lag = 4)
y
plot(y$x)
library(panelvar)
data('Dahlberg')
?pvargmm
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues", "grants"),
lags = 1,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues", "grants"),
lags = 1,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
pvargmm
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues", "grants"),
lags = 3,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues"),
lags = 3,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues"),
lags = 3,
# transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex1_dahlberg_data <- pvargmm(dependent_vars = c("expenditures", "revenues", "grants"),
lags = 2,
transformation = "fod",
data = Dahlberg,
panel_identifier=c("id", "year"),
steps = c("twostep"),
system_instruments = FALSE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
data(abdata)
ex3_abdata <-pvargmm(
dependent_vars = c("emp"),
lags = 4,
predet_vars = c("wage"),
exog_vars = c("cap"),
transformation = "fd",
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = TRUE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
transformation = "fd",
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = TRUE,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex3_abdata)
abdata
summary(ex3_abdata)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
transformation = "fd",
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex3_abdata)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
# transformation = "fd",
transformation = 'a',
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
# transformation = "fd",
transformation = NULL,
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
# transformation = "fd",
transformation = NA,
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
transformation = "fod",
transformation = NA,
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 4,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
# transformation = "fod",
transformation = 'fod',
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex3_abdata)
Andrews_Lu_MMSC(ex3_abdata)
stab <- stability(ex3_abdata)
print(stab)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 3,
# predet_vars = c("wage"),
# exog_vars = c("cap"),
# transformation = "fod",
transformation = 'fod',
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex3_abdata)
Andrews_Lu_MMSC(ex3_abdata)
stab <- stability(ex3_abdata)
print(stab)
?oirf
ex3_abdata_oirf <- oirf(ex3_abdata, n.ahead = 8)
ex3_abdata_girf <- girf(ex3_abdata, n.ahead = 8)
ex3_abdata_girf <- girf(ex3_abdata, n.ahead = 8, ma_approx_steps = 8)
ex3_abdata_bs <- bootstrap_irf(ex3_abdata, typeof_irf = c("GIRF"),
n.ahead = 8,
nof_Nstar_draws = 500,
confidence.band = 0.95)
ex3_abdata <-pvargmm(
dependent_vars = c("emp", "wage"),
lags = 3,
# predet_vars = c("wage"),
# exog_vars = c("emp", "wage"),
# transformation = "fod",
transformation = 'fod',
data = abdata,
panel_identifier = c("id", "year"),
steps = c("twostep"),
system_instruments = F,
max_instr_dependent_vars = 99,
max_instr_predet_vars = 99,
min_instr_dependent_vars = 2L,
min_instr_predet_vars = 1L,
collapse = FALSE
)
summary(ex3_abdata)
Andrews_Lu_MMSC(ex3_abdata)
stab <- stability(ex3_abdata)
print(stab)
ex3_abdata_oirf <- oirf(ex3_abdata, n.ahead = 8)
ex3_abdata_girf <- girf(ex3_abdata, n.ahead = 8, ma_approx_steps = 8)
ex3_abdata_girf <- girf(ex3_abdata, n.ahead = 1, ma_approx_steps = 1)
ex3_abdata_oirf <- oirf(ex3_abdata, n.ahead = 1)
ex3_abdata_girf <- girf(ex3_abdata, n.ahead = 1, ma_approx_steps = 1)
ex3_abdata_bs <- bootstrap_irf(ex3_abdata, typeof_irf = c("GIRF"),
n.ahead = 1,
nof_Nstar_draws = 1,
confidence.band = 0.95)
panel_fd_fod
?panel_fd_fod
??panel_fd_fod
plot(ex3_abdata_girf, ex3_abdata_bs)
## Check the transformation of first-different
## Load the data
load('Data/dat_all_month.RData')
dat_sub <- subset(dat_all, bank = b)
dat_sub <- subset(dat_all, Bank = b)
b = unique(dat_all$Bank)[1]
dat_sub <- subset(dat_all, Bank = b)
b = unique(dat_all$Bank)[1]
b
b = as.character(unique(dat_all$Bank)[1])
dat_sub <- subset(dat_all, Bank = b)
?subset
b = unique(dat_all$Bank)[1]
dat_sub <- subset(dat_all, Bank == b)
dat_sub
##-----------------------------------
## Check the stationary of the data
## Author: Peng Yang
##-----------------------------------
library(tseries)
dat_sub$BP
plot(dat_sub$BP)
# Perform ADF test before transformation
adf.test(dat_sub$BP)
# Perform ADF test before transformation
adf.test(dat_sub$BP, k = 4)
# Perform ADF test before transformation
res <- adf.test(dat_sub$BP, k = 4)
res$p.value
# Perform ADF test before transformation
res <- adf.test(dat_sub, k = 4)$p.value
# Perform ADF test before transformation
res_BP <- adf.test(dat_sub$BP, k = 4)$p.value
# Perform ADF test before transformation
res_BP <- adf.test(dat_sub$BP, k = 4)$p.value
res_ESG <- adf.test(dat_sub$ESG, k = 4)$p.value
res_Assets <- adf.test(dat_sub$Assets, k = 4)$p.value
res_BCI <- adf.test(dat_sub$BCI, k = 4)$p.value
res_GDP <- adf.test(dat_sub$GDP, k = 4)$p.value
res_AI <- adf.test(dat_sub$AI, k = 4)$p.value
res_BP
head9dat_sub
head(dat_sub)
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub, codes = rep(5, 6))
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
codes = rep(5, 6))
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP')],
codes = rep(5, 6))
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP')],
codes = rep(5, 5))
dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP')]
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI')],
codes = rep(5, 5))
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI')],
codes = rep(5, 4))
dat_sub_transformed
plot(dat_sub_transformed$ESG)
plot(dat_sub_transformed$BCI)
plot(dat_sub_transformed$BP)
plot(dat_sub_transformed$ESG)
plot(dat_sub_transformed$ESG, ylim = c(-5,5))
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
codes = c(rep(5, 4), 1, 1))
dat_sub_transformed
length(dat_sub$Date)
dim(dat_sub_transformed)
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
lag = 4,
codes = c(rep(5, 4), 1, 1))
dim(dat_sub_transformed)
length(dat_sub$Date)
dat_sub_transformed$Date <- dat_sub$Date[-c(1:3)]
dat_sub_transformed$Date <- dat_sub$Date[-c(1:4)]
dat_transformed <- data.frame(BP, )
dat_transformed <- data.frame(BP = Numeric(), )
str(dat_all)
## Store P values
P_res <- c()
dat_transformed <- data.frame(BP  = numeric(),
ESG = numeric(),
Assets = numeric(),
BCI    = numeric(),
AI     = numeric(),
Date   = factor(),
Bank   = factor())
## For each bank
for(b in unique(dat_all$Bank)){
b = unique(dat_all$Bank)[1]
dat_sub <- subset(dat_all, Bank == b)
# Perform ADF test before transformation
res_BP <- adf.test(dat_sub$BP, k = 4)$p.value
res_ESG <- adf.test(dat_sub$ESG, k = 4)$p.value
res_Assets <- adf.test(dat_sub$Assets, k = 4)$p.value
res_BCI <- adf.test(dat_sub$BCI, k = 4)$p.value
res_GDP <- adf.test(dat_sub$GDP, k = 4)$p.value
res_AI <- adf.test(dat_sub$AI, k = 4)$p.value
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
lag = 4,
codes = c(rep(5, 4), 1, 1))
dat_sub_transformed$Date <- dat_sub$Date[-c(1:4)]
dat_sub_transformed$Bank <- b
dat_transformed <- rbind(dat_transformed, dat_sub_transformed)
}
## For each bank
for(b in unique(dat_all$Bank)){
# b = unique(dat_all$Bank)[1]
dat_sub <- subset(dat_all, Bank == b)
# Perform ADF test before transformation
res_BP <- adf.test(dat_sub$BP, k = 4)$p.value
res_ESG <- adf.test(dat_sub$ESG, k = 4)$p.value
res_Assets <- adf.test(dat_sub$Assets, k = 4)$p.value
res_BCI <- adf.test(dat_sub$BCI, k = 4)$p.value
res_GDP <- adf.test(dat_sub$GDP, k = 4)$p.value
res_AI <- adf.test(dat_sub$AI, k = 4)$p.value
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
lag = 4,
codes = c(rep(5, 4), 1, 1))
dat_sub_transformed$Date <- dat_sub$Date[-c(1:4)]
dat_sub_transformed$Bank <- b
dat_transformed <- rbind(dat_transformed, dat_sub_transformed)
}
## Store P values
P_res <- c()
dat_transformed <- data.frame(BP  = numeric(),
ESG = numeric(),
Assets = numeric(),
BCI    = numeric(),
AI     = numeric(),
Date   = factor(),
Bank   = factor())
## For each bank
for(b in unique(dat_all$Bank)){
# b = unique(dat_all$Bank)[1]
dat_sub <- subset(dat_all, Bank == b)
# Perform ADF test before transformation
res_BP <- adf.test(dat_sub$BP, k = 4)$p.value
res_ESG <- adf.test(dat_sub$ESG, k = 4)$p.value
res_Assets <- adf.test(dat_sub$Assets, k = 4)$p.value
res_BCI <- adf.test(dat_sub$BCI, k = 4)$p.value
res_GDP <- adf.test(dat_sub$GDP, k = 4)$p.value
res_AI <- adf.test(dat_sub$AI, k = 4)$p.value
## Apply the transformation
dat_sub_transformed <- fred_transform(dat_sub[,c('BP', 'ESG', 'Assets', 'BCI', 'GDP', 'AI')],
lag = 4,
codes = c(rep(5, 4), 1, 1))
dat_sub_transformed$Date <- dat_sub$Date[-c(1:4)]
dat_sub_transformed$Bank <- b
dat_transformed <- rbind(dat_transformed, dat_sub_transformed)
}
b
dat_sub$ESG
plot(dat_sub$ESG)
dat_transformed
setwd("~/Box Sync/GitHub/SAMprior")
